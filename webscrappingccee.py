# -*- coding: utf-8 -*-
"""WebScrappingCCEE.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ar09rKODlfRA1E2033NZ9nuAvGYcaZfk
"""

!pip install xlsxwriter
import pandas as pd
import requests
import string
import csv
import xlsxwriter
import time
from bs4 import BeautifulSoup

tempo_ini = time.time()

pag1 = 'https://www.ccee.org.br/portal/faces/pages_publico/quem-participa/conheca_os_agentes?_adf.ctrl-state=15uulgcjpp_86&contentid=CCEE_355599&ordenacao=dataassociacao&classe=6,12&letra='
pag2 = '&pag='

f = csv.writer(open('leads.csv', 'w'))
f.writerow(['Agente', 'Razão Social', 'CNPJ', 'Classe'])

dicionario_campos = {}
lista_agente = []
lista_razao_social = []
lista_cnpj = []
lista_classe = []

lista_alfabeto = list(string.ascii_uppercase)

for letra in lista_alfabeto:
  try:
    for i in range(1, 46):
      try:
        pag = pag1+str(letra)+pag2+str(i)
        print(letra, i)
        req = requests.get(pag)
        if req.status_code == 200:
            content = req.content

        soup = BeautifulSoup(content, 'html.parser')
        table = soup.find(name='table')

        table_str = str(table)
        df = pd.read_html(table_str)[0]

        for ag in range(0, len(df['Agente'])):
          lista_agente.append(df['Agente'][ag])
          lista_razao_social.append(df['Razão Social'][ag])
          lista_cnpj.append(df['CNPJ'][ag])
          lista_classe.append(df['Classe'][ag])

        dicionario_campos["Agente"] = lista_agente
        dicionario_campos["Razão Social"] = lista_razao_social
        dicionario_campos["CNPJ"] = lista_cnpj
        dicionario_campos["Classe"] = lista_classe

        lista_impressao = []
        lista_impressao.append(dicionario_campos.copy())

      except:
        pass
  except:
    pass

output_file = 'Leads.xlsx'
writer = pd.ExcelWriter(output_file, engine='xlsxwriter')

for j in range(0, len(lista_impressao)):
  workbook=writer.book
  df2 = pd.DataFrame.from_dict(lista_impressao[j], orient = 'index')
  df2 = df2.transpose()

df2.to_excel(writer, startrow=0 , startcol=0, index = False)
writer.save()
tempo_fim = time.time()
print("A execução do programa levou {} minutos".format((tempo_fim - tempo_ini)/60))



















